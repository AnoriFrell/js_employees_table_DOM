{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAWI,EACA,EAZE,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAS,SAAS,aAAa,CAAC,SAEhC,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAa,SAAS,aAAa,CAAC,UAGpC,EAAY,EAAE,CAEhB,EAAe,MACf,EAAe,GAIb,EAAY,IAAI,KAAK,YAAY,CAAC,SA4LxC,SAAS,EAAO,CAAK,CAAE,CAAO,EAC5B,EAAM,SAAS,CAAG,GAElB,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,MAE9B,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAqB,OAAO,OAAO,CAAC,EAAA,CAAA,OAAA,QAAA,CAAA,GAApC,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA+C,CAA/C,I,EAAA,G,EAAA,EAAA,KAAA,C,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,AAAA,I,E,M,E,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,EAAA,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,EAAA,G,E,EAAA,I,A,W,M,A,U,6I,KAAO,EAAA,CAAA,CAAA,EAAA,CAAK,EAAZ,CAAA,CAAA,EAAA,CACG,EAAS,SAAS,aAAa,CAAC,MAItC,GAFA,EAAO,WAAW,CAAG,EAEjB,AAAQ,WAAR,EAAkB,CACpB,IAAM,EAAS,IAA4C,MAAA,CAAxC,EA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"tbody\");\nvar titles = document.querySelector(\"thead\");\nvar form = document.createElement(\"form\");\nvar formSubmit = document.createElement(\"button\");\nvar inputs = [\n    \"Name\",\n    \"Position\",\n    \"Office\",\n    \"Age\",\n    \"Salary\"\n];\nvar employees = [];\nvar currentOrder = \"asc\";\nvar currentTitle = \"\";\nvar activeLine;\nvar editing;\nvar formatter = new Intl.NumberFormat(\"en-US\");\nArray.from(table.children).forEach(function(el) {\n    employees.push({\n        Name: el.children[0].textContent,\n        Position: el.children[1].textContent,\n        Office: el.children[2].textContent,\n        Age: el.children[3].textContent,\n        Salary: el.children[4].textContent.replace(\",\", \"\").replace(\"$\", \"\")\n    });\n});\ntitles.addEventListener(\"click\", function(e) {\n    var sortValue = e.target.textContent;\n    employees.sort(function(a, b) {\n        return sortTable(a, b, sortValue);\n    });\n    if (currentTitle !== sortValue) {\n        currentTitle = sortValue;\n        currentOrder = \"asc\";\n    }\n    if (currentTitle === sortValue && currentOrder === \"desc\") currentOrder = \"asc\";\n    else if (currentTitle === sortValue && currentOrder === \"asc\") {\n        currentOrder = \"desc\";\n        employees.reverse();\n    }\n    render(table, employees);\n});\ntable.addEventListener(\"click\", function(e) {\n    if (activeLine && activeLine !== e.target.parentNode) activeLine.classList.remove(\"active\");\n    activeLine = e.target.parentNode;\n    activeLine.classList.add(\"active\");\n});\nform.classList.add(\"new-employee-form\");\ninputs.forEach(function(input) {\n    if (input !== \"Office\") {\n        var inputType = input === \"Age\" || input === \"Salary\" ? \"number\" : \"text\";\n        form.insertAdjacentHTML(\"beforeend\", \"<label>\\n        \".concat(input, ':\\n        <input\\n          name=\"').concat(input.toLowerCase(), '\"\\n          type=\"').concat(inputType, '\"\\n          data-qa=\"').concat(input.toLowerCase(), '\"\\n        >\\n      </label>'));\n    } else {\n        var offices = [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ];\n        var selection = offices.map(function(office) {\n            return \"<option name=\".concat(office, \">\").concat(office, \"</option>\");\n        });\n        form.insertAdjacentHTML(\"beforeend\", \"<label>\\n        \".concat(input, ':\\n        <select\\n          name=\"').concat(input.toLowerCase(), '\"\\n          type=\"text\"\\n          data-qa=\"').concat(input.toLowerCase(), '\"\\n          required\\n        >\\n          ').concat(selection, \"\\n        </select>\\n      </label>\"));\n    }\n});\nformSubmit.textContent = \"Save to table\";\nform.append(formSubmit);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var notification = document.createElement(\"div\");\n    var notiTitle = document.createElement(\"h2\");\n    var notiDescription = document.createElement(\"p\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = \"notification\";\n    notification.append(notiTitle);\n    notification.append(notiDescription);\n    var formData = new FormData(e.target);\n    var data = Object.fromEntries(formData.entries());\n    var isError = dataCaution(data, notiDescription);\n    if (!isError) {\n        employees.push({\n            Name: data[\"name\"],\n            Position: data[\"position\"],\n            Office: data[\"office\"],\n            Age: +data[\"age\"],\n            Salary: +data[\"salary\"]\n        });\n        notification.classList.add(\"success\");\n        notiTitle.textContent = \"Success\";\n        notiDescription.text = \"Data successfully added\";\n        render(table, employees);\n        e.target.reset();\n    } else {\n        notiTitle.textContent = \"Error\";\n        notification.classList.add(\"error\");\n    }\n    document.body.append(notification);\n    setTimeout(function() {\n        document.body.removeChild(notification);\n    }, 3000);\n});\ndocument.body.append(form);\ntable.addEventListener(\"dblclick\", function(e) {\n    editing = e.target.textContent;\n    e.target.innerHTML = '<input class=\"cell-input\" value=\"'.concat(editing, '\">');\n    e.target.firstChild.focus();\n});\ndocument.addEventListener(\"blur\", function(e) {\n    var target = e.target;\n    if (target.classList.contains(\"cell-input\")) {\n        var newText = target.value;\n        if (newText.trim() !== \"\") target.parentNode.textContent = newText;\n        else target.parentNode.textContent = editing;\n    }\n}, true);\ndocument.addEventListener(\"keydown\", function(e) {\n    if (e.key === \"Enter\") {\n        var target = e.target;\n        if (target.classList.contains(\"cell-input\")) {\n            var newText = target.value;\n            if (newText.trim() !== \"\") target.parentNode.textContent = newText;\n            else target.parentNode.textContent = editing;\n        }\n    }\n});\nfunction sortTable(a, b, title) {\n    var current = a[title];\n    var next = b[title];\n    if (title === \"Name\" || title === \"Position\" || title === \"Office\") return current.localeCompare(next);\n    return current - next;\n}\nfunction render(field, content) {\n    field.innerHTML = \"\";\n    content.forEach(function(employee) {\n        var row = document.createElement(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Object.entries(employee)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], data = _step_value[1];\n                var column = document.createElement(\"td\");\n                column.textContent = data;\n                if (key === \"Salary\") {\n                    var salary = \"$\".concat(formatter.format(data).toLocaleString());\n                    column.textContent = salary;\n                }\n                row.append(column);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        field.append(row);\n    });\n}\nfunction dataCaution(data, text) {\n    if (data[\"name\"].trim().length < 4) {\n        text.textContent = \"Please, enter a correct name\";\n        return true;\n    }\n    if (data[\"position\"].trim() === \"\") {\n        text.textContent = \"Position is required\";\n        return true;\n    }\n    if (data[\"age\"] < 18 || data[\"age\"] > 90) {\n        text.textContent = \"Age must be between 18 and 90\";\n        return true;\n    }\n    if (data[\"salary\"] <= \"0\" || data[\"salary\"].trim() === \"\") {\n        text.textContent = \"Salary required\";\n        return true;\n    }\n}\n\n//# sourceMappingURL=index.ed6d19b5.js.map\n","'use strict';\n\nconst table = document.querySelector('tbody');\nconst titles = document.querySelector('thead');\n\nconst form = document.createElement('form');\nconst formSubmit = document.createElement('button');\n\nconst inputs = ['Name', 'Position', 'Office', 'Age', 'Salary'];\nconst employees = [];\n\nlet currentOrder = 'asc';\nlet currentTitle = '';\nlet activeLine;\nlet editing;\n\nconst formatter = new Intl.NumberFormat('en-US');\n\nArray.from(table.children).forEach((el) => {\n  employees.push({\n    Name: el.children[0].textContent,\n    Position: el.children[1].textContent,\n    Office: el.children[2].textContent,\n    Age: el.children[3].textContent,\n    Salary: el.children[4].textContent.replace(',', '').replace('$', ''),\n  });\n});\n\ntitles.addEventListener('click', (e) => {\n  const sortValue = e.target.textContent;\n\n  employees.sort((a, b) => sortTable(a, b, sortValue));\n\n  if (currentTitle !== sortValue) {\n    currentTitle = sortValue;\n    currentOrder = 'asc';\n  }\n\n  if (currentTitle === sortValue && currentOrder === 'desc') {\n    currentOrder = 'asc';\n  } else if (currentTitle === sortValue && currentOrder === 'asc') {\n    currentOrder = 'desc';\n    employees.reverse();\n  }\n\n  render(table, employees);\n});\n\ntable.addEventListener('click', (e) => {\n  if (activeLine && activeLine !== e.target.parentNode) {\n    activeLine.classList.remove('active');\n  }\n\n  activeLine = e.target.parentNode;\n  activeLine.classList.add('active');\n});\n\nform.classList.add('new-employee-form');\n\ninputs.forEach((input) => {\n  if (input !== 'Office') {\n    const inputType = input === 'Age' || input === 'Salary' ? 'number' : 'text';\n\n    form.insertAdjacentHTML(\n      'beforeend',\n      `<label>\n        ${input}:\n        <input\n          name=\"${input.toLowerCase()}\"\n          type=\"${inputType}\"\n          data-qa=\"${input.toLowerCase()}\"\n        >\n      </label>`,\n    );\n  } else {\n    const offices = [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ];\n\n    const selection = offices.map(\n      (office) => `<option name=${office}>${office}</option>`,\n    );\n\n    form.insertAdjacentHTML(\n      'beforeend',\n      `<label>\n        ${input}:\n        <select\n          name=\"${input.toLowerCase()}\"\n          type=\"text\"\n          data-qa=\"${input.toLowerCase()}\"\n          required\n        >\n          ${selection}\n        </select>\n      </label>`,\n    );\n  }\n});\n\nformSubmit.textContent = 'Save to table';\nform.append(formSubmit);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const notification = document.createElement('div');\n  const notiTitle = document.createElement('h2');\n  const notiDescription = document.createElement('p');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = 'notification';\n  notification.append(notiTitle);\n  notification.append(notiDescription);\n\n  const formData = new FormData(e.target);\n  const data = Object.fromEntries(formData.entries());\n  const isError = dataCaution(data, notiDescription);\n\n  if (!isError) {\n    employees.push({\n      Name: data['name'],\n      Position: data['position'],\n      Office: data['office'],\n      Age: +data['age'],\n      Salary: +data['salary'],\n    });\n\n    notification.classList.add('success');\n    notiTitle.textContent = 'Success';\n    notiDescription.text = 'Data successfully added';\n\n    render(table, employees);\n    e.target.reset();\n  } else {\n    notiTitle.textContent = 'Error';\n    notification.classList.add('error');\n  }\n  document.body.append(notification);\n\n  setTimeout(() => {\n    document.body.removeChild(notification);\n  }, 3000);\n});\n\ndocument.body.append(form);\n\ntable.addEventListener('dblclick', (e) => {\n  editing = e.target.textContent;\n\n  e.target.innerHTML = `<input class=\"cell-input\" value=\"${editing}\">`;\n  e.target.firstChild.focus();\n});\n\ndocument.addEventListener(\n  'blur',\n  (e) => {\n    const target = e.target;\n\n    if (target.classList.contains('cell-input')) {\n      const newText = target.value;\n\n      if (newText.trim() !== '') {\n        target.parentNode.textContent = newText;\n      } else {\n        target.parentNode.textContent = editing;\n      }\n    }\n  },\n  true,\n);\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'Enter') {\n    const target = e.target;\n\n    if (target.classList.contains('cell-input')) {\n      const newText = target.value;\n\n      if (newText.trim() !== '') {\n        target.parentNode.textContent = newText;\n      } else {\n        target.parentNode.textContent = editing;\n      }\n    }\n  }\n});\n\nfunction sortTable(a, b, title) {\n  const current = a[title];\n  const next = b[title];\n\n  if (title === 'Name' || title === 'Position' || title === 'Office') {\n    return current.localeCompare(next);\n  }\n\n  return current - next;\n}\n\nfunction render(field, content) {\n  field.innerHTML = '';\n\n  content.forEach((employee) => {\n    const row = document.createElement('tr');\n\n    for (const [key, data] of Object.entries(employee)) {\n      const column = document.createElement('td');\n\n      column.textContent = data;\n\n      if (key === 'Salary') {\n        const salary = `$${formatter.format(data).toLocaleString()}`;\n\n        column.textContent = salary;\n      }\n\n      row.append(column);\n    }\n    field.append(row);\n  });\n}\n\nfunction dataCaution(data, text) {\n  if (data['name'].trim().length < 4) {\n    text.textContent = 'Please, enter a correct name';\n\n    return true;\n  }\n\n  if (data['position'].trim() === '') {\n    text.textContent = 'Position is required';\n\n    return true;\n  }\n\n  if (data['age'] < 18 || data['age'] > 90) {\n    text.textContent = 'Age must be between 18 and 90';\n\n    return true;\n  }\n\n  if (data['salary'] <= '0' || data['salary'].trim() === '') {\n    text.textContent = 'Salary required';\n\n    return true;\n  }\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","activeLine","editing","table","document","querySelector","titles","form","createElement","formSubmit","employees","currentOrder","currentTitle","formatter","Intl","NumberFormat","render","field","content","innerHTML","forEach","employee","row","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Object","entries","Symbol","iterator","next","done","_step_value","value","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","call","push","err","_unsupported_iterable_to_array","o","minLen","n","prototype","toString","slice","constructor","name","from","test","_non_iterable_rest","TypeError","key","data","column","textContent","salary","concat","format","toLocaleString","append","return","children","el","Name","Position","Office","Age","Salary","replace","addEventListener","e","sortValue","target","sort","a","b","current","title","localeCompare","reverse","parentNode","classList","remove","add","inputs","input","insertAdjacentHTML","toLowerCase","selection","offices","map","office","preventDefault","notification","notiTitle","notiDescription","setAttribute","className","fromEntries","formData","FormData","trim","text","reset","body","setTimeout","removeChild","firstChild","focus","contains","newText"],"version":3,"file":"index.ed6d19b5.js.map"}